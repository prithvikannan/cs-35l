1. Get a copy of the Diffutils repository, in Git format, from the file ~eggert/src/gnu/diffutils on the SEASnet GNU/Linux servers, or from its main Savannah repository.
Get a log of changes to Diffutils’ master branch using the “git log” command, and put it into the file git-log.txt.
Generate a list of tags used for Diffutils using the “git tag” command, and put it into the file git-tags.txt
Find the commit entitled “maint: quote 'like this' or "like this", not `like this'”, and generate a patch for that commit, putting it into the file quote-patch.txt.
Check out version 3.0 of Diffutils from your repository.
Use the patch command to apply quote-patch.txt to version 3.0. In some cases it will not be able to figure out what file to patch; skip past those by typing RETURN. Record any problems you had in applying the patch.
Use the git status command to get an overview of what happened.
Learn how to use the Emacs functions vc-diff (C-x v =) and vc-revert (C-x v u). When you're in the *vc-diff* buffer generated by vc-diff, use describe-mode (C-h m) to find out the Emacs functions that you can use there, and in particular learn how to use the diff-apply-hunk (C-c C-a) and diff-goto-source (C-c C-c) functions.
Use Emacs to revert all the changes to files other than .c files, since you want only changes to .c files. Also, and don't forget this part, undo all the changes to .c files other than changes to character string constants, as the character-string changes are the only changes that you want; this may require editing some files by hand.
Use Emacs to examine the files src/*.c.rej carefully, and copy rejected patches into the corresponding .c files as needed.
Remove all untracked files that git status warns you about, since you don’t plan on adding any files in your patch.
When you’re done with the above, git status should report a half-dozen modified files, and git diff should output a patch that is three or four hundred lines long. Put that patch into a file quote-3.0-patch.txt.
Build the resulting modified version of Diffutils, using the commands described in the file README-hacking, skipping the part about CVS; CVS is obsolescent. (If you are building on lnxsrv07 or lnxsrv09 or any other host that is using version 2.16 or later of the GNU C Library, you will need to apply an additional patch after running ./bootstrap and before running ./configure, because glibc 2.16 removed the obsolete and dangerous gets function declared by a Diffutils header.) Verify that Diffutils does the right thing with the “diff . -” scenario, as well as with “diff --help”.
Do a sanity test using the modified version of Diffutils that you just built, by using the just-built diff to compare the source code of Diffutils 3.0 to the source code of your modified version. Put the former source code into a directory diffutils-3.0 and the latter source code into a directory diffutils-3.0-patch, and run your implementation of diff with the command “D/diff -pru diffutils-3.0 diffutils-3.0-patch >quote-3.0-test.txt”, where the D is the directory containing your diff implementation.
Use diff to compare the contents of quote-3.0-test.txt and quote-3.0-patch.txt. Are the files identical? If not, are the differences innocuous?